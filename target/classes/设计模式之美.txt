1. 设计原理与思想
    1.1 面向对象
        1.1.1 封装
            (a) 是什么？对对象的访问权限的控制。
            (b) 为什么？
                (b1) 对对象的操作的安全性。
                (b2) 对对象操作的容易性。
        1.1.2 抽象
            (a) 是什么？
                (a1) 它是一个通用的设计思想。说小了，通过类的一个函数去包裹具体的实现逻辑就是一种抽象。
                     说大点，在架构设计中，一个RPC接口包裹了实现就是一种抽象。
                (a2) 不仅在面向对象编程中，也在其他编程范式中出现，有时候不看做是面向对象独有特性。
            (b) 为什么？
                (b1) 面对复杂问题的时候，我们必须忽略掉一些非关键性的实现细节，只关注功能点。所以我们要抽象。e.g. 长转短/短转长。
        1.1.3 继承
            (a) 是什么？
                (a1) 事物与事物直接 is-a 的关系。
            (b) 为什么？
                (b1) 代码复用。
        1.1.4 多态
            (a) 是什么？
                (a1) 一个事物的多种形态。
                (a2) 子类替换父类。
                (a3) 继承 + 方法重写；接口类。
            (b) 为什么？
                (b1) 提高代码可复用性和可扩展性。

=========================================================

2.

==========================================================

3.

======================================================

4.

=========================================================

5.

================================================================

6.

================================================================




